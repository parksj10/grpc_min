# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pas.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='pas.proto',
  package='pas',
  syntax='proto3',
  serialized_options=b'\n\013io.grpc.PASB\010PASProtoP\001Z\002./\242\002\003PAS',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tpas.proto\x12\x03pas\"(\n\x14PhotonRecordsRequest\x12\x10\n\x08\x66ileName\x18\x01 \x01(\t\"+\n\x12PhotonRecordsReply\x12\x15\n\rphotonRecords\x18\x01 \x03(\r2\xa6\x01\n\x03PAS\x12P\n\x16getPhotonRecordsStream\x12\x19.pas.PhotonRecordsRequest\x1a\x17.pas.PhotonRecordsReply\"\x00\x30\x01\x12M\n\x15getPhotonRecordsUnary\x12\x19.pas.PhotonRecordsRequest\x1a\x17.pas.PhotonRecordsReply\"\x00\x42#\n\x0bio.grpc.PASB\x08PASProtoP\x01Z\x02./\xa2\x02\x03PASb\x06proto3'
)




_PHOTONRECORDSREQUEST = _descriptor.Descriptor(
  name='PhotonRecordsRequest',
  full_name='pas.PhotonRecordsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fileName', full_name='pas.PhotonRecordsRequest.fileName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=58,
)


_PHOTONRECORDSREPLY = _descriptor.Descriptor(
  name='PhotonRecordsReply',
  full_name='pas.PhotonRecordsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='photonRecords', full_name='pas.PhotonRecordsReply.photonRecords', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=103,
)

DESCRIPTOR.message_types_by_name['PhotonRecordsRequest'] = _PHOTONRECORDSREQUEST
DESCRIPTOR.message_types_by_name['PhotonRecordsReply'] = _PHOTONRECORDSREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PhotonRecordsRequest = _reflection.GeneratedProtocolMessageType('PhotonRecordsRequest', (_message.Message,), {
  'DESCRIPTOR' : _PHOTONRECORDSREQUEST,
  '__module__' : 'pas_pb2'
  # @@protoc_insertion_point(class_scope:pas.PhotonRecordsRequest)
  })
_sym_db.RegisterMessage(PhotonRecordsRequest)

PhotonRecordsReply = _reflection.GeneratedProtocolMessageType('PhotonRecordsReply', (_message.Message,), {
  'DESCRIPTOR' : _PHOTONRECORDSREPLY,
  '__module__' : 'pas_pb2'
  # @@protoc_insertion_point(class_scope:pas.PhotonRecordsReply)
  })
_sym_db.RegisterMessage(PhotonRecordsReply)


DESCRIPTOR._options = None

_PAS = _descriptor.ServiceDescriptor(
  name='PAS',
  full_name='pas.PAS',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=106,
  serialized_end=272,
  methods=[
  _descriptor.MethodDescriptor(
    name='getPhotonRecordsStream',
    full_name='pas.PAS.getPhotonRecordsStream',
    index=0,
    containing_service=None,
    input_type=_PHOTONRECORDSREQUEST,
    output_type=_PHOTONRECORDSREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='getPhotonRecordsUnary',
    full_name='pas.PAS.getPhotonRecordsUnary',
    index=1,
    containing_service=None,
    input_type=_PHOTONRECORDSREQUEST,
    output_type=_PHOTONRECORDSREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_PAS)

DESCRIPTOR.services_by_name['PAS'] = _PAS

# @@protoc_insertion_point(module_scope)
